#!/sbin/sh

######
# INIT
######

umask 022

# Global vars
TMPDIR=/dev/tmp
PERSISTDIR=/sbin/.magisk/mirror/persist

rm -rf $TMPDIR 2>/dev/null
mkdir -p $TMPDIR

# echo before loading util_functions
ui_print(){ 
echo "$1"
}

require_new_magisk(){
  ui_print "*******************************"
  ui_print " Please install Magisk v19.0+! "
  ui_print "*******************************"
  exit 1
}

####################
# SETUP ENVIRONMENT
####################

OUTFD=$2
ZIPFILE=$3

mount /data 2>/dev/null

# Load utility functions
if [ -f /data/adb/magisk/util_functions.sh ]; then
  . /data/adb/magisk/util_functions.sh
  NVBASE=/data/adb
else
  require_new_magisk
fi

# Preperation for flashable zips
setup_flashable

# Mount partitions
mount_partitions

# Detect version and architecture
api_level_arch_detect

# Setup busybox and binaries
if $BOOTMODE; then
boot_actions
else
recovery_actions
fi

##############
# PREPARATION
##############

# Extract prop file
unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
if [ ! -f $TMPDIR/module.prop ]; then
abort "[!] Unable to extract zip file!"
fi

$BOOTMODE && MODDIRNAME=modules_update || MODDIRNAME=modules
MODULEROOT=$NVBASE/$MODDIRNAME
MODID=$(grep_prop id $TMPDIR/module.prop)
MODPATH=$MODULEROOT/$MODID
MODNAME=$(grep_prop name $TMPDIR/module.prop)

# Create mod paths
rm -rf $MODPATH 2>/dev/null
mkdir -p $MODPATH

##############
# INSTALLATION
##############

# Extract 01
unzip -o "$ZIPFILE" 'addon/*' setup.sh inject.sh -d $TMPDIR >&2

# Load install script
. $TMPDIR/setup.sh

if [ "$SKIPMOUNT" = "true" ]; then
touch "$MODPATH/skip_mount"
fi

# Enable debugging if true
if [ "$DEBUG" = "true" ]; then
set -x
else
set +x
fi

# Remove all old files before doing installation if want to
if [ "$CLEANSERVICE" = "true" ]; then
rm -rf /data/adb/modules/${MODID}/*
fi 

# Callback 01
mod_info_print

# Extract 02
unzip -o "$ZIPFILE" -x 'META-INF/*' 'addon/*' setup.sh inject.sh -d $MODPATH >&2
ui_print "[*] Extracting module files..."

# Load vol key selector
. "$TMPDIR/addon/Volume-Key-Selector/install.sh"

# Load main
. "$TMPDIR/inject.sh"

# Set permissions
set_permissions

# Handle replace folders
for TARGET in $REPLACE; do
  ui_print "[*] Replace target: $TARGET"
  mktouch $MODPATH$TARGET/.replace
done

if $BOOTMODE; then
  # Update info for Magisk Manager
  mktouch $NVBASE/modules/$MODID/update
  cp -af "$MODPATH/module.prop" "$NVBASE/modules/$MODID/module.prop"
fi

# Copy over custom sepolicy rules
if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
  ui_print "[*] Installing custom sepolicy patch"
  PERSISTMOD=$PERSISTDIR/magisk/$MODID
  mkdir -p $PERSISTMOD
  cp -af "$MODPATH/sepolicy.rule" "$PERSISTMOD/sepolicy.rule"
fi

# Remove stuffs that don't belong to modules
rm -rf "$MODPATH/LICENSE"
rm -rf "$MODPATH/README.md"
rm -rf "$MODPATH/changelog"

##############
# Finalizing
##############

cd /
if ! $BOOTMODE; then
recovery_cleanup
fi
rm -rf $TMPDIR

ui_print "[*] Done"
exit 0
